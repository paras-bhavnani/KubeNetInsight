{{- if .Values.rbac.create }}
---
# eBPF DaemonSet Cluster Permissions
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-ebpf-sa
  namespace: {{ .Release.Namespace }}
automountServiceAccountToken: true

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-network-monitor
  labels: {{- include "kubenetinsight.labels" . | nindent 4 }}
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints", "nodes", "namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["networkpolicies"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["nodes/proxy"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-network-monitor-binding
  labels: {{- include "kubenetinsight.labels" . | nindent 4 }}
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name }}-ebpf-sa
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-network-monitor
  apiGroup: rbac.authorization.k8s.io

---
# Prometheus Specific Permissions (kube-system only)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-prometheus-sa
  namespace: monitoring

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-kube-system-access
  namespace: kube-system
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-access-binding
  namespace: kube-system
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name }}-prometheus-sa
  namespace: monitoring
roleRef:
  kind: Role
  name: {{ .Release.Name }}-kube-system-access
  apiGroup: rbac.authorization.k8s.io
{{- end }}
