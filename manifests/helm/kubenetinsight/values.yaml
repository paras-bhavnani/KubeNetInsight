# Core Application
image:
  repository: kubenetinsight
  tag: latest        # or your timestamp tag
  pullPolicy: Never

# enable entire monitoring stack
monitoring:
  enabled: true

  prometheus:
    enabled: true

  grafana:
    enabled: true
    adminUser: admin
    adminPassword: strongpassword123
    resources:
      limits:
        cpu: "500m"
        memory: "512Mi"
      requests:
        cpu: "250m"
        memory: "256Mi"

metrics:
  port: 8080

# Resource limits
resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["pods", "services", "namespaces", "endpoints", "nodes"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["networking.k8s.io"]
      resources: ["networkpolicies"]
      verbs: ["get", "list"]
    - apiGroups: [""]
      resources: ["nodes/proxy"]
      verbs: ["get"]

daemonset:
  securityContext:
    capabilities:
      add: ["BPF", "SYS_RESOURCE", "NET_ADMIN", "SYS_ADMIN", "PERFMON"]
    seccompProfile:
      type: RuntimeDefault  # Instead of Unconfined
    runAsUser: 0
    allowPrivilegeEscalation: false  # Prevent privilege creep
    seccompProfile:
      type: Unconfined
  volumes:
    - name: sys
      hostPath:
        path: /sys
    - name: debugfs
      hostPath:
        path: /sys/kernel/debug
    - name: bpffs
      hostPath:
        path: /sys/fs/bpf
        type: DirectoryOrCreate
